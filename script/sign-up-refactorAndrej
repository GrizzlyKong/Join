async function init() {
  loadUsers();
  privacyPolicyHoverCheckbox();
  checkboxCheck();
  passwordLenghtCheck();
  eventTogglePasswordVisibility();
  updatePasswordVisibilityForPassword();
  updatePasswordVisibilityForConfirmPassword();
  updateVisibilities();
}


async function loadUsers() {
  try {
    users = JSON.parse(await getItem("users"));
  } catch (e) {
    console.error("Loading error:", e);
  }
}


async function register() {
  const privacyCheckbox = document.getElementById("privacyCheckbox");
  const privacyPolicy = document.querySelector(".sign-up-privacy-policy");
  const privacyPolicySpan = document.querySelector(".sign-up-privacy-policy-span");

  addPrivacyCheckboxListener(privacyCheckbox, privacyPolicy, privacyPolicySpan);
  if (!privacyCheckbox.checked) {
    showError(privacyPolicy, privacyPolicySpan);
    return;
  } else {
    removeError(privacyPolicy, privacyPolicySpan);
    handleSuccessfulRegistration();
  }
}


function addPrivacyCheckboxListener(checkbox, policyElement, spanElement) {
  checkbox.addEventListener("change", function() {
    if (this.checked) {
      policyElement.classList.remove("error");
      spanElement.classList.remove("error2");
    }
  });
}


function showError(policyElement, spanElement) {
  policyElement.classList.add("error");
  spanElement.classList.add("error2");
}


function removeError(policyElement, spanElement) {
  policyElement.classList.remove("error");
  spanElement.classList.remove("error2");
}


async function handleSuccessfulRegistration() {
  pushUsers();
  await setItem("users", JSON.stringify(users));
  resetForm();
  SignedUpSuccessfully();
}


function SignedUpSuccessfully() {
  document.getElementById("sign-up-id").classList.remove("d-none");
  document.getElementById("sign-up-id").classList.add("sign-up-animation");
  document.getElementById("body").classList.add("body");
  document.getElementById("sign-up-content-id").classList.add("blur");
  setTimeout(() => {
    document.getElementById("sign-up-id").classList.add("d-none");
    document.getElementById("body").classList.remove("body");
    document.getElementById("sign-up-content-id").classList.remove("blur");
    location.replace("../html/login.html");
  }, 3000);
}


function pushUsers() {
  users.push({
    name: username.value,
    email: email.value,
    password: password.value,
    passwordConfirm: passwordConfirm.value,
  });
}


function resetForm() {
  username.value = "";
  email.value = "";
  password.value = "";
  passwordConfirm.value = "";
}


function checkboxCheck() {
document.getElementById("privacyCheckbox").addEventListener("change", function() {
  if (this.checked) {
    document.querySelector(".sign-up-privacy-policy").classList.remove("error");
  }
});
}


function passwordLenghtCheck() {
const passwordInput = document.getElementById("password");
passwordInput.addEventListener("input", function() {
  const passwordValue = this.value;
  const passwordLengthError = document.getElementById("passwordLengthError");

  if (passwordValue.length < 6) {
    passwordLengthError.innerText = "Password must be at least 6 characters";
  } else {
    passwordLengthError.innerText = "";
  }
});
}


function privacyPolicyHoverCheckbox() {
  const privacyPolicySpan = document.getElementById("sign-up-privacy-policy-id");
  const privacyCheckbox = document.getElementById("privacyCheckbox");

  privacyPolicySpan.addEventListener("mouseenter", function() {
    privacyCheckbox.classList.add("hovered");
  });

  privacyPolicySpan.addEventListener("mouseleave", function() {
    privacyCheckbox.classList.remove("hovered");
  });
}


 function updatePasswordVisibility(field) {
  const passwordInput = document.getElementById(field === 'password' ? 'password' : 'passwordConfirm');
  const lockIcon = document.getElementById(`lockIcon${field === 'password' ? 'Password' : 'Confirm'}`);
  const eyeIcon = document.getElementById(`eyeIcon${field === 'password' ? 'Password' : 'Confirm'}`);
  const eyeIconHidden = document.getElementById(`eyeIconHidden${field === 'password' ? 'Password' : 'Confirm'}`);
  const passwordValue = passwordInput.value.trim();

  if (passwordInput.type === 'password') {
    passwordIsHidden(lockIcon, eyeIcon, eyeIconHidden,passwordValue);
  } else {
     passwordIsVisible(lockIcon, eyeIcon, eyeIconHidden,passwordValue);
  }
}


function passwordIsHidden(lockIcon, eyeIcon, eyeIconHidden,passwordValue) {
lockIcon.style.display = passwordValue === '' ? 'inline-block' : 'none';
eyeIcon.style.display = passwordValue === '' ? 'none' : 'inline-block';
eyeIconHidden.style.display = 'none';
}


function passwordIsVisible(lockIcon, eyeIcon, eyeIconHidden,passwordValue) {
lockIcon.style.display = passwordValue === '' ? 'inline-block' : 'none';
eyeIcon.style.display = 'none';
eyeIconHidden.style.display = passwordValue === '' ? 'none' : 'inline-block';
}


function eventTogglePasswordVisibility() {
document.getElementById('eyeIconPassword').addEventListener('click', () => togglePasswordVisibility('password'));
document.getElementById('password').addEventListener('input', updatePasswordVisibilityForPassword);
}


function togglePasswordVisibility(field) {
  const passwordInput = document.getElementById(field === 'password' ? 'password' : 'passwordConfirm');
  const eyeIcon = document.getElementById(`eyeIcon${field === 'password' ? 'Password' : 'Confirm'}`);

  if (passwordInput.type === 'password') {
    passwordInput.type = 'text';
    eyeIcon.src = '../assets/icons/eyeNO.png';
  } else {
    passwordInput.type = 'password';
    eyeIcon.src = '../assets/icons/eyeYES.png';
  }
}


function updatePasswordVisibilityForPassword() {
  updatePasswordVisibility('password');
}


function updatePasswordVisibilityForConfirmPassword() {
  updatePasswordVisibility('passwordConfirm');
}


function updateVisibilities() {
  document.getElementById('password').addEventListener('input', updatePasswordVisibilityForPassword);
  document.getElementById('passwordConfirm').addEventListener('input', updatePasswordVisibilityForConfirmPassword);
}

document.getElementById('eyeIconPassword').addEventListener('click', () => togglePasswordVisibility('password'));
try {
  document.getElementById('eyeIconConfirmPassword').addEventListener('click', () => togglePasswordVisibility('passwordConfirm'));
} catch (error) {}
